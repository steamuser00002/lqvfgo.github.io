<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>长恨歌</title>
    <url>/2018/12/07/test2/</url>
    <content><![CDATA[<center>唐 · 白居易<center>

<p>汉皇重色思倾国，御宇多年求不得。<br>杨家有女初长成，养在深闺人未识。<br>天生丽质难自弃，一朝选在君王侧。<br>回眸一笑百媚生，六宫粉黛无颜色。<br>春寒赐浴华清池，温泉水滑洗凝脂。<br>侍儿扶起娇无力，始是新承恩泽时。<br>云鬓花颜金步摇，芙蓉帐暖度春宵。<br>春宵苦短日高起，从此君王不早朝。<a id="more"></a><br>承欢侍宴无闲暇，春从春游夜专夜。<br>后宫佳丽三千人，三千宠爱在一身。<br>金屋妆成娇侍夜，玉楼宴罢醉和春。<br>姊妹弟兄皆列土，可怜光彩生门户。<br>遂令天下父母心，不重生男重生女。<br>骊宫高处入青云，仙乐风飘处处闻。<br>缓歌慢舞凝丝竹，尽日君王看不足。<br>渔阳鼙鼓动地来，惊破霓裳羽衣曲。<br>九重城阙烟尘生，千乘万骑西南行。<br>翠华摇摇行复止，西出都门百余里。<br>六军不发无奈何，宛转蛾眉马前死。<br>花钿委地无人收，翠翘金雀玉搔头。<br>君王掩面救不得，回看血泪相和流。<br>黄埃散漫风萧索，云栈萦纡登剑阁。<br>峨嵋山下少人行，旌旗无光日色薄。<br>蜀江水碧蜀山青，圣主朝朝暮暮情。<br>行宫见月伤心色，夜雨闻铃肠断声。<br>天旋地转回龙驭，到此踌躇不能去。<br>马嵬坡下泥土中，不见玉颜空死处。<br>君臣相顾尽沾衣，东望都门信马归。<br>归来池苑皆依旧，太液芙蓉未央柳。<br>芙蓉如面柳如眉，对此如何不泪垂。<br>春风桃李花开日，秋雨梧桐叶落时。<br>西宫南内多秋草，落叶满阶红不扫。<br>梨园弟子白发新，椒房阿监青娥老。<br>夕殿萤飞思悄然，孤灯挑尽未成眠。<br>迟迟钟鼓初长夜，耿耿星河欲曙天。<br>鸳鸯瓦冷霜华重，翡翠衾寒谁与共。<br>悠悠生死别经年，魂魄不曾来入梦。<br>临邛道士鸿都客，能以精诚致魂魄。<br>为感君王辗转思，遂教方士殷勤觅。<br>排空驭气奔如电，升天入地求之遍。<br>上穷碧落下黄泉，两处茫茫皆不见。<br>忽闻海上有仙山，山在虚无缥渺间。<br>楼阁玲珑五云起，其中绰约多仙子。<br>中有一人字太真，雪肤花貌参差是。<br>金阙西厢叩玉扃，转教小玉报双成。<br>闻道汉家天子使，九华帐里梦魂惊。<br>揽衣推枕起徘徊，珠箔银屏迤逦开。<br>云鬓半偏新睡觉，花冠不整下堂来。<br>风吹仙袂飘飖举，犹似霓裳羽衣舞。<br>玉容寂寞泪阑干，梨花一枝春带雨。<br>含情凝睇谢君王，一别音容两渺茫。<br>昭阳殿里恩爱绝，蓬莱宫中日月长。<br>回头下望人寰处，不见长安见尘雾。<br>惟将旧物表深情，钿合金钗寄将去。<br>钗留一股合一扇，钗擘黄金合分钿。<br>但教心似金钿坚，天上人间会相见。<br>临别殷勤重寄词，词中有誓两心知。<br>七月七日长生殿，夜半无人私语时。<br>在天愿作比翼鸟，在地愿为连理枝。<br>天长地久有时尽，此恨绵绵无绝期。</p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>诗歌</tag>
      </tags>
  </entry>
  <entry>
    <title>图片测试</title>
    <url>/2019/02/07/%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<img src="/2019/02/07/%E6%B5%8B%E8%AF%95/1.jpg" class="" title="生活照">]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>照片</tag>
      </tags>
  </entry>
  <entry>
    <title>测试</title>
    <url>/2018/12/06/test/</url>
    <content><![CDATA[<p>&copy;</p>
<h1 id="This-is-an-H1"><a href="#This-is-an-H1" class="headerlink" title="This is an H1"></a>This is an H1</h1><h2 id="This-is-an-H2"><a href="#This-is-an-H2" class="headerlink" title="This is an H2"></a>This is an H2</h2><h1 id="This-is-an-H1-1"><a href="#This-is-an-H1-1" class="headerlink" title="This is an H1"></a>This is an H1</h1><h2 id="This-is-an-H2-1"><a href="#This-is-an-H2-1" class="headerlink" title="This is an H2"></a>This is an H2</h2><h6 id="This-is-an-H6"><a href="#This-is-an-H6" class="headerlink" title="This is an H6"></a>This is an H6</h6><h1 id="This-is-an-H1-2"><a href="#This-is-an-H1-2" class="headerlink" title="This is an H1"></a>This is an H1</h1><h2 id="This-is-an-H2-2"><a href="#This-is-an-H2-2" class="headerlink" title="This is an H2"></a>This is an H2</h2><h3 id="This-is-an-H3"><a href="#This-is-an-H3" class="headerlink" title="This is an H3"></a>This is an H3</h3><blockquote>
<p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>
<p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.</p>
</blockquote>
<a id="more"></a>

<blockquote>
<p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>
</blockquote>
<blockquote>
<p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.</p>
</blockquote>
<blockquote>
<p>This is the first level of quoting.</p>
<blockquote>
<p>This is nested blockquote.</p>
</blockquote>
<p>Back to the first level.</p>
</blockquote>
<blockquote>
<h2 id="This-is-a-header"><a href="#This-is-a-header" class="headerlink" title="This is a header."></a>This is a header.</h2><ol>
<li>This is the first list item.</li>
<li>This is the second list item.</li>
</ol>
<p>Here’s some example code:</p>
<pre><code>return shell_exec(&quot;echo $input | $markdown_script&quot;);</code></pre></blockquote>
<ul>
<li>Red</li>
<li>Green</li>
<li>Blue</li>
</ul>
<ol>
<li>Bird</li>
<li>McHale</li>
<li>Parish</li>
</ol>
<ol>
<li>Bird</li>
<li>McHale</li>
<li>Parish</li>
</ol>


<ol>
<li>Bird</li>
<li>McHale</li>
<li>Parish</li>
</ol>
<ul>
<li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.<br>Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,<br>viverra nec, fringilla in, laoreet vitae, risus.</li>
<li>Donec sit amet nisl. Aliquam semper ipsum sit amet velit.<br>Suspendisse id sem consectetuer libero luctus adipiscing.</li>
</ul>
<p>Use the <code>printf()</code> function.</p>
<p><code>There is a literal backtick (`) here.</code></p>
<p>A single backtick in a code span: <code>`</code></p>
<p>A backtick-delimited string in a code span: <code>`foo`</code></p>
<p><code>&amp;#8212;</code> is the decimal-encoded equivalent of <code>&amp;mdash;</code>.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">one</span><br><span class="line">two</span><br><span class="line">three</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>TrueSTUDIO STM32环境搭建</title>
    <url>/2019/02/16/TrueSTUDIO-STM32%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>&copy; 原创内容，转载请注明出处。</p>
<blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul>
<li>操作系统：  Windows10</li>
<li>芯片类型：  STM32F103ZET6</li>
<li>环境：      Atollic TrueSTUDIO V9.2.0</li>
<li>工具：      ST-Link(淘宝十块买的)</li>
</ul>
</blockquote>
<a id="more"></a>

<h2 id="1、建工程"><a href="#1、建工程" class="headerlink" title="1、建工程"></a>1、建工程</h2><hr>
<ul>
<li><p>文件-&gt;新建-&gt;C Project</p>
  <img src="/2019/02/16/TrueSTUDIO-STM32%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/newproject.jpg" class="" title="新建工程">
</li>
<li><p>填上项目名称，选择Embedded C Project</p>
<img src="/2019/02/16/TrueSTUDIO-STM32%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/projecttype.jpg" class="" title="工程类型">
</li>
<li><p>选择目标MCU-&gt;下一步-&gt;下一步</p>
<img src="/2019/02/16/TrueSTUDIO-STM32%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/target.jpg" class="" title="目标平台">
</li>
<li><p>配置调试器-&gt;完成</p>
<img src="/2019/02/16/TrueSTUDIO-STM32%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/debug.jpg" class="" title="新建工程">

</li>
</ul>
<h2 id="2、IDE的小配置"><a href="#2、IDE的小配置" class="headerlink" title="2、IDE的小配置"></a>2、IDE的小配置</h2><hr>
<ul>
<li><p>绑定代码补全热键<br>窗口-&gt;首选项-&gt;工作空间-&gt;键-&gt;过滤器输入content<br>绑定content assit</p>
<img src="/2019/02/16/TrueSTUDIO-STM32%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/key.png" class="" title="代码补全">

</li>
</ul>
<h2 id="3、使用下载和调试配置"><a href="#3、使用下载和调试配置" class="headerlink" title="3、使用下载和调试配置"></a>3、使用下载和调试配置</h2><hr>
<p>True STUDO V9.2.0集成了STM32_Programmer_CLI,通过TrueSTUDIO外部工具功能，简单的配置就可以轻松的下载和调试程序。<br>STM32_Programmer_CLI.exe的默认路径是在<br><code>C:\Program Files (x86)\Atollic\TrueSTUDIO for STM32 9.2.0\Servers\STM32CubeProgrammer\bin</code><br>使用命令行打开可以看到使用的规则(支持内容超多)</p>
<img src="/2019/02/16/TrueSTUDIO-STM32%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/cli.png" class="" title="CLI">
<p>配置到外部工具中我们只用到了其中的几条。下面开始配置。</p>
<blockquote>
<h3 id="第一步-复制调试配置"><a href="#第一步-复制调试配置" class="headerlink" title="第一步:复制调试配置"></a>第一步:复制调试配置</h3><ul>
<li>1、运行-&gt;调试配置-&gt;双击嵌入式C/C++应用展开</li>
<li>2、右击嵌入式C/C++应用下内容复制出一个新的并重命名</li>
<li>3、打开启动脚本选项卡</li>
<li>将load删除或注释掉</li>
</ul>
</blockquote>
<img src="/2019/02/16/TrueSTUDIO-STM32%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/debugcfg1.png" class="" title="debugconfig">

<blockquote>
<h3 id="第二步-创建一个外部工具配置"><a href="#第二步-创建一个外部工具配置" class="headerlink" title="第二步:创建一个外部工具配置"></a>第二步:创建一个外部工具配置</h3><ul>
<li>1、运行-&gt;外部工具配置</li>
</ul>
</blockquote>
<img src="/2019/02/16/TrueSTUDIO-STM32%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/ext.jpg" class="" title="ext_tool">

<blockquote>
<ul>
<li>2、新建外部程序并重命名，选择STM32_Programmer_CLI的位置</li>
</ul>
</blockquote>
<img src="/2019/02/16/TrueSTUDIO-STM32%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/ext1.png" class="" title="ext_tool">
<blockquote>
<ul>
<li>3、选择工作空间(工程的Debug目录)</li>
<li>4、输入STM32_Programmer_CLI命令行自变量</li>
</ul>
</blockquote>
<img src="/2019/02/16/TrueSTUDIO-STM32%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/ext2.png" class="" title="ext_tool">

<p>至此已经可以下载程序了</p>
<p>为了方便，我们可以将外部工具添加到启动组</p>
<blockquote>
<h3 id="第三步-添加外部工具到启动组"><a href="#第三步-添加外部工具到启动组" class="headerlink" title="第三步:添加外部工具到启动组"></a>第三步:添加外部工具到启动组</h3><ul>
<li>1、运行-&gt;运行配置</li>
</ul>
</blockquote>
<img src="/2019/02/16/TrueSTUDIO-STM32%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/runcfg.jpg" class="" title="runconfig">

<blockquote>
<ul>
<li>2、新建配置并重命名-&gt;add-&gt;选择run-&gt;选择刚才建好的外部程序-&gt;选择<code>Wait until Terminated</code>(很重要)</li>
</ul>
</blockquote>
<img src="/2019/02/16/TrueSTUDIO-STM32%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/launch.png" class="" title="launch">

<blockquote>
<ul>
<li>3、添加调试工具到启动组</li>
</ul>
</blockquote>
<img src="/2019/02/16/TrueSTUDIO-STM32%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/launchd.png" class="" title="launchdebug">

<blockquote>
<h3 id="第四步-功能测试"><a href="#第四步-功能测试" class="headerlink" title="第四步:功能测试"></a>第四步:功能测试</h3><ul>
<li>1、运行-&gt;运行</li>
</ul>
</blockquote>
<img src="/2019/02/16/TrueSTUDIO-STM32%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/info.png" class="" title="info">

<p>Enjoy it!</p>
<p>参考文档：STM32CubeProgrammer+Atollic TrueSTUDIO for STM32</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>STM32</tag>
        <tag>TrueSTUDIO</tag>
        <tag>环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Qt MQTT模块编译</title>
    <url>/2019/02/28/Qt-MQTT%E6%A8%A1%E5%9D%97%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<p>&copy; 原创内容，转载请注明出处。</p>
<blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul>
<li>Qt 5.10开始Qt官方提供了MQTT组件，但需要商业授权的账号在安装Qt时才提供选择安装,所以自己编译安装。</li>
<li>操作系统：  Windows10</li>
<li>环境：      Qt MSVC版 V5.12.0, VS2017</li>
<li>工具：      git qmake nmake</li>
</ul>
</blockquote>
<a id="more"></a>
<img src="/2019/02/28/Qt-MQTT%E6%A8%A1%E5%9D%97%E7%BC%96%E8%AF%91/mqtt.png" class="" title="MQTT">

<h2 id="第一步：下载-MQTT-库源码"><a href="#第一步：下载-MQTT-库源码" class="headerlink" title="第一步：下载 MQTT 库源码"></a>第一步：下载 MQTT 库源码</h2><p><code>git clone git://code.qt.io/qt/qtmqtt.git</code></p>
<h2 id="第二步：编译安装"><a href="#第二步：编译安装" class="headerlink" title="第二步：编译安装"></a>第二步：编译安装</h2><ul>
<li><p>将qmake的可执行程序目录（如<code>C:\Qt\Qt5.12.0\5.12.0\msvc2017_64\bin</code>）添加到环境变量。</p>
</li>
<li><p>在开始菜单中找到VS2017的菜单目录，找到并打开”适用于VS 2017的x64本机工具命令提示”。</p>
<img src="/2019/02/28/Qt-MQTT%E6%A8%A1%E5%9D%97%E7%BC%96%E8%AF%91/vs.png" class="" title="CLI">
</li>
<li><p>vs命令行工具cd到下载的qtmqtt的源码目录。</p>
</li>
<li><p>vs命令行工具依次执行 <code>qmake</code> </p>
</li>
<li><p>再执行<code>nmake &amp;&amp; make install</code> 等待完成即可。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>MQTT</tag>
        <tag>qmake</tag>
        <tag>Qt</tag>
      </tags>
  </entry>
  <entry>
    <title>deepin搭建nginx+rtmp流媒体服务器</title>
    <url>/2020/04/04/deepin%E6%90%AD%E5%BB%BAnginx-rtmp%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<p>&copy; 原创内容，转载请注明出处。</p>
<blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul>
<li>操作系统：  Deepin Linux15.11 桌面版</li>
<li>Nginx版本：1.16.0</li>
<li>推流端：　　OBS　      </li>
<li>拉流端：　　VLC</li>
</ul>
</blockquote>
<a id="more"></a>


<h2 id="第一步：编译安装Nginx"><a href="#第一步：编译安装Nginx" class="headerlink" title="第一步：编译安装Ｎginx"></a>第一步：编译安装Ｎginx</h2><h3 id="1-安装Nginx依赖"><a href="#1-安装Nginx依赖" class="headerlink" title="1.安装Ｎginx依赖"></a>1.安装Ｎginx依赖</h3><ol>
<li>安装gcc g++的依赖库<br><code>sudo apt install build-essential</code><br><code>sudo apt install libtool</code></li>
</ol>
<ol start="2">
<li><p>安装pcre依赖库<br><code>sudo install libpcre3 libpcre3-dev</code></p>
</li>
<li><p>安装zlib依赖库<br><code>sudo apt install zlib1g-dev</code></p>
</li>
<li><p>安装SSL依赖库<br><code>sudo apt install openssl libssl-dev</code></p>
</li>
</ol>
<h3 id="2-Nginx下载"><a href="#2-Nginx下载" class="headerlink" title="2.Nginx下载"></a>2.Nginx下载</h3><p>各版本下载页面：<a href="http://nginx.org/download/" target="_blank" rel="noopener">http://nginx.org/download/</a><br>源文件编译参考文档：<a href="http://nginx.org/en/docs/configure.html" target="_blank" rel="noopener">http://nginx.org/en/docs/configure.html</a>  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir nginx-dir</span><br><span class="line">cd nginx-dir</span><br><span class="line"># 获取源码</span><br><span class="line">wget http://nginx.org/download/nginx-1.16.0.tar.gz</span><br><span class="line"># 解压</span><br><span class="line">tar zxvf nginx-1.16.0.tar.gz</span><br></pre></td></tr></table></figure>

<h3 id="3-Nginx编译安装"><a href="#3-Nginx编译安装" class="headerlink" title="3.Nginx编译安装"></a>3.Nginx编译安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd nginx-1.16.0/</span><br><span class="line"></span><br><span class="line"># 设置编译安装目录</span><br><span class="line">./configure --prefix=/usr/local/nginx</span><br><span class="line">#编译</span><br><span class="line">make -j6</span><br><span class="line"></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>

<h3 id="验证Nginx是否安装成功"><a href="#验证Nginx是否安装成功" class="headerlink" title="验证Nginx是否安装成功"></a>验证Nginx是否安装成功</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 使用默认配置文件启动nginx</span><br><span class="line">sudo /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</span><br><span class="line"></span><br><span class="line"># 查看nginx的版本号</span><br><span class="line">sudo /usr/local/nginx/sbin/nginx -v</span><br></pre></td></tr></table></figure>
<p>浏览器访问localhost，默认80端口，出现如下界面表示nginx安装成功:</p>
 <img src="/2020/04/04/deepin%E6%90%AD%E5%BB%BAnginx-rtmp%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/welcomenginx.png" class="" title="欢迎页">


<h2 id="第二步：编译安装Nginx的rtmp扩展包"><a href="#第二步：编译安装Nginx的rtmp扩展包" class="headerlink" title="第二步：编译安装Ｎginx的rtmp扩展包"></a>第二步：编译安装Ｎginx的rtmp扩展包</h2><p>ｇithub 地址：<a href="https://github.com/arut/nginx-rtmp-module" target="_blank" rel="noopener">https://github.com/arut/nginx-rtmp-module</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd nginx-dir</span><br><span class="line"></span><br><span class="line">git clone https://github.com/arut/nginx-rtmp-module.git</span><br><span class="line"></span><br><span class="line">cd nginx-1.16.0/</span><br><span class="line"></span><br><span class="line">./configure --add-module=../nginx-rtmp-module</span><br><span class="line"></span><br><span class="line">make -j6</span><br><span class="line"></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>

<h2 id="第三步：Nginx-rtmp配置"><a href="#第三步：Nginx-rtmp配置" class="headerlink" title="第三步：Ｎginx rtmp配置"></a>第三步：Ｎginx rtmp配置</h2><p><code>sudo vim /usr/local/nginx/conf/nginx.conf</code></p>
<p>添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rtmp&#123;</span><br><span class="line">    server&#123;</span><br><span class="line">        listen 1935;</span><br><span class="line">        chunk_size 4096;</span><br><span class="line">        application live&#123;</span><br><span class="line">                live on;</span><br><span class="line">                record off;</span><br><span class="line">                allow play all;</span><br><span class="line">                &#125;</span><br><span class="line">          &#125;   </span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure>
<p>重启nginx　　<br><code>sudo /usr/local/nginx/sbin/nginx -s reload</code></p>
<p>查看1935端口监听状态　　<br><code>netstat -an |grep 1935</code></p>
<h2 id="第四步串流"><a href="#第四步串流" class="headerlink" title="第四步串流"></a>第四步串流</h2><p>查看local ip  </p>
<img src="/2020/04/04/deepin%E6%90%AD%E5%BB%BAnginx-rtmp%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/ip.png" class="" title="ip">
<p>OBS串流地址  </p>
<img src="/2020/04/04/deepin%E6%90%AD%E5%BB%BAnginx-rtmp%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/OBS.png" class="" title="OBS">
<p>OBS开始串流  </p>
<img src="/2020/04/04/deepin%E6%90%AD%E5%BB%BAnginx-rtmp%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/OBS.png" class="" title="OBS">
<p>vlc拉流</p>
<img src="/2020/04/04/deepin%E6%90%AD%E5%BB%BAnginx-rtmp%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/pull.png" class="" title="vlc">
<p>效果  </p>
<img src="/2020/04/04/deepin%E6%90%AD%E5%BB%BAnginx-rtmp%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/effect.png" class="" title="vlc">

<p>参考文档　<a href="https://blog.csdn.net/CSDN_FlyYoung/article/details/94591864" target="_blank" rel="noopener">https://blog.csdn.net/CSDN_FlyYoung/article/details/94591864</a></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>nginx</tag>
        <tag>rtmp</tag>
        <tag>流媒体服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>nRF52840点灯工程师已上线</title>
    <url>/2020/05/06/nRF52840%E7%82%B9%E7%81%AF%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%B7%B2%E4%B8%8A%E7%BA%BF/</url>
    <content><![CDATA[<p>&copy; 原创内容，转载请注明出处。</p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul>
<li>开发环境 MDK5</li>
<li>SDK nRF5_SDK_15.0.0_a53641a</li>
<li>功能 点亮LED<a id="more"></a>

</li>
</ul>
<h2 id="1-GPIO相关寄存器"><a href="#1-GPIO相关寄存器" class="headerlink" title="1. GPIO相关寄存器"></a>1. GPIO相关寄存器</h2><table>
<thead>
<tr>
<th align="center">寄存器名称</th>
<th align="center">R/W</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">OUT</td>
<td align="center">R/W</td>
<td align="center">设置端口输出</td>
</tr>
<tr>
<td align="center">OUTSET</td>
<td align="center">R/W</td>
<td align="center">置位端口输出高，置零无效</td>
</tr>
<tr>
<td align="center">OUTCLR</td>
<td align="center">R/W</td>
<td align="center">置位端口输出低，置零无效</td>
</tr>
<tr>
<td align="center">IN</td>
<td align="center">R</td>
<td align="center">设置端口输入</td>
</tr>
<tr>
<td align="center">DIR</td>
<td align="center">R/W</td>
<td align="center">设置端口方向</td>
</tr>
<tr>
<td align="center">DIRSET</td>
<td align="center">R/W</td>
<td align="center">置位端口为输入，置零无效</td>
</tr>
<tr>
<td align="center">DIRCLR</td>
<td align="center">R/W</td>
<td align="center">置位端口为输出，置零无效</td>
</tr>
<tr>
<td align="center">LATCH</td>
<td align="center">R/W</td>
<td align="center">传感锁存寄存器，用于指示符合PIN_CNF[n].SENSE寄存器中设置的条件</td>
</tr>
<tr>
<td align="center">DETECTMODE</td>
<td align="center">R/W</td>
<td align="center">传感模式选择，选择直接感应模式还是锁存感应模式</td>
</tr>
<tr>
<td align="center">PIN_CNF[n]</td>
<td align="center">R/W</td>
<td align="center">管脚配置寄存器</td>
</tr>
</tbody></table>
<p>管脚配置寄存器（PIN_CNF[n]）</p>
<table>
<thead>
<tr>
<th align="center">位</th>
<th align="center">域</th>
<th align="center">R/W</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0</td>
<td align="center">DIR</td>
<td align="center">R/W</td>
<td align="center">管脚方向</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">INPUT</td>
<td align="center">R/W</td>
<td align="center">连接或断开输入缓冲</td>
</tr>
<tr>
<td align="center">2-3</td>
<td align="center">PULL</td>
<td align="center">R/W</td>
<td align="center">内部拉电阻设置</td>
</tr>
<tr>
<td align="center">8-10</td>
<td align="center">DRIVE</td>
<td align="center">R/W</td>
<td align="center">驱动强度设置</td>
</tr>
<tr>
<td align="center">16-17</td>
<td align="center">SENSE</td>
<td align="center">R/W</td>
<td align="center">感用设置</td>
</tr>
</tbody></table>
<h2 id="2-GPIO组件库要包含的头文件"><a href="#2-GPIO组件库要包含的头文件" class="headerlink" title="2. GPIO组件库要包含的头文件"></a>2. GPIO组件库要包含的头文件</h2><p><code>#include &quot;nrf_gpio.h&quot;</code></p>
<h2 id="3-GPIO的基本操作"><a href="#3-GPIO的基本操作" class="headerlink" title="3. GPIO的基本操作"></a>3. GPIO的基本操作</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//输出模式设置</span><br><span class="line">__STATIC_INLINE void nrf_gpio_cfg_output(uint32_t pin_number);</span><br><span class="line">//输入模式设置</span><br><span class="line">__STATIC_INLINE void nrf_gpio_cfg_input(uint32_t pin_number, nrf_gpio_pin_pull_t pull_config);</span><br><span class="line">//引脚置高</span><br><span class="line">__STATIC_INLINE void nrf_gpio_pin_set(uint32_t pin_number);</span><br><span class="line">//引脚置低</span><br><span class="line">__STATIC_INLINE void nrf_gpio_pin_clear(uint32_t pin_number);</span><br><span class="line">//引脚电平翻转</span><br><span class="line">__STATIC_INLINE void nrf_gpio_pin_toggle(uint32_t pin_number);</span><br><span class="line">//引脚电平读取</span><br><span class="line">__STATIC_INLINE uint32_t nrf_gpio_pin_read(uint32_t pin_number);</span><br></pre></td></tr></table></figure>

<h2 id="4-点亮一个LED"><a href="#4-点亮一个LED" class="headerlink" title="4. 点亮一个LED"></a>4. 点亮一个LED</h2><p>LED驱动函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">void LED_Init(void)</span><br><span class="line">&#123;</span><br><span class="line">	nrf_gpio_cfg_output(LED_0);     //初始化为输出</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void LED0_Open(void)</span><br><span class="line">&#123;</span><br><span class="line">	nrf_gpio_pin_clear(LED_0);      //置低</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void LED0_Close(void)</span><br><span class="line">&#123;</span><br><span class="line">	nrf_gpio_pin_set(LED_0);        //置高</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void LED0_Toggle(void)</span><br><span class="line">&#123;</span><br><span class="line">	nrf_gpio_pin_toggle(LED_0);     //翻转</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>主函数，添加使LED闪烁</p>
<p><code>#include &quot;nrf_delay.h&quot;</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	LED_Init();</span><br><span class="line">	while(true)</span><br><span class="line">	&#123;</span><br><span class="line">	</span><br><span class="line">		LED0_Close();</span><br><span class="line">		nrf_delay_ms(200);</span><br><span class="line">		LED0_Open();</span><br><span class="line">		nrf_delay_ms(200);</span><br><span class="line">        LED0_Toggle();</span><br><span class="line">        nrf_delay_ms(200);</span><br><span class="line">			</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>点灯工程完成</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>nRF52840学习笔记</tag>
        <tag>蓝牙外设</tag>
        <tag>GPIO</tag>
        <tag>点灯工程</tag>
      </tags>
  </entry>
  <entry>
    <title>STM32MPU学习笔记-Starter-Package</title>
    <url>/2020/06/19/STM32MPU%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-Starter-Package/</url>
    <content><![CDATA[<p>&copy; 原创内容，转载请注明出处。</p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<ul>
<li>操作系统：  Deepin Linux15.11 桌面版</li>
<li>开发板：    STM32MP157A-DK1</li>
<li>PC $&gt;  表示在PC机上执行的命令行</li>
<li>Board $&gt;  表示在开发板上执行的命令行</li>
</ul>
</blockquote>
<a id="more"></a>

<h2 id="1-下载安装CubeProgrammer"><a href="#1-下载安装CubeProgrammer" class="headerlink" title="1.下载安装CubeProgrammer"></a>1.下载安装CubeProgrammer</h2><p>CubeProgrammer下载地址<a href="https://www.st.com/zh/development-tools/stm32cubeprog.html" target="_blank" rel="noopener">点击此处</a></p>
<p>CubeProgrammer需要jre才可以运行，如果你不想去oracle官网下<a href="https://pan.baidu.com/s/1jO_4v0YqlxyR18j5aDencg" target="_blank" rel="noopener">点击这个百度网盘链接</a>里面有我下好的，提取码是 <code>h658</code>。</p>
<p>如果你不想用百度网盘下或许你可以</p>
<p><code>PC $&gt; sudo apt install default-jre</code></p>
<h2 id="2-安装libusb"><a href="#2-安装libusb" class="headerlink" title="2.安装libusb"></a>2.安装libusb</h2><p>libusb可以实现用户空间直接和usb设备直接通信。</p>
<p><code>PC $&gt; sudo apt install libusb-1.0-0</code></p>
<h2 id="3-拷贝CubeProgrammer安装目录下的STLink规则到-etc-udev-rules-d"><a href="#3-拷贝CubeProgrammer安装目录下的STLink规则到-etc-udev-rules-d" class="headerlink" title="3.拷贝CubeProgrammer安装目录下的STLink规则到/etc/udev/rules.d/"></a>3.拷贝CubeProgrammer安装目录下的STLink规则到/etc/udev/rules.d/</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/*安装目录可能有所不同*/</span><br><span class="line">PC $&gt; cd $HOME/STMicroelectronics/STM32Cube/STM32CubeProgrammer/Drivers/rules</span><br><span class="line">PC $&gt; sudo cp *.* /etc/udev/rules.d/</span><br></pre></td></tr></table></figure>

<h2 id="4-创建一个workspace"><a href="#4-创建一个workspace" class="headerlink" title="4. 创建一个workspace"></a>4. 创建一个workspace</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PC $&gt; mkdir $HOME/STM32MPU_workspace/STM32MP15-Ecosystem-v1.2.0</span><br><span class="line">PC $&gt; mkdir $HOME/STM32MPU_workspace/STM32MP15-Ecosystem-v1.2.0/Starter-Package</span><br><span class="line">PC $&gt; cd $HOME/STM32MPU_workspace/STM32MP15-Ecosystem-v1.2.0/Starter-Package</span><br></pre></td></tr></table></figure>

<h2 id="5-下载官方的Starter-Package"><a href="#5-下载官方的Starter-Package" class="headerlink" title="5. 下载官方的Starter-Package"></a>5. 下载官方的Starter-Package</h2><p>Starter-Package下载地址<a href="https://www.st.com/content/ccc/resource/technical/software/firmware/group0/21/4c/cd/61/9e/dd/45/5e/STM32MP15_OpenSTLinux_Starter_Package/files/FLASH-stm32mp1-openstlinux-20-02-19.tar.xz/jcr:content/translations/en.FLASH-stm32mp1-openstlinux-20-02-19.tar.xz" target="_blank" rel="noopener">点击此处</a></p>
<h2 id="6-解压"><a href="#6-解压" class="headerlink" title="6. 解压"></a>6. 解压</h2><p><code>tar xvf en.FLASH-stm32mp1-openstlinux-20-02-19.tar.xz</code></p>
<h2 id="7-开发板连接"><a href="#7-开发板连接" class="headerlink" title="7. 开发板连接"></a>7. 开发板连接</h2><p>TypeC PWR： 电源适配器，推荐DC 5V-3A</p>
<p>TypeC USB： 用于USB DFU，虚拟网口</p>
<p>Micro USB: stlink,用于调试，虚拟串口</p>
<h2 id="8-将开发板后面的拨码开关拨到BOOT0-BOOT2"><a href="#8-将开发板后面的拨码开关拨到BOOT0-BOOT2" class="headerlink" title="8. 将开发板后面的拨码开关拨到BOOT0 BOOT2"></a>8. 将开发板后面的拨码开关拨到BOOT0 BOOT2</h2><img src="/2020/06/19/STM32MPU%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-Starter-Package/flash.jpg" class="" title="DFU模式">

<h2 id="9-打开CubeProgrammer写入镜像"><a href="#9-打开CubeProgrammer写入镜像" class="headerlink" title="9. 打开CubeProgrammer写入镜像"></a>9. 打开CubeProgrammer写入镜像</h2><ul>
<li>连接USB，如果PORT没有显示可用的USB，检查拨码开关的位置对不对，如果位置正确重启开发板。</li>
</ul>
<img src="/2020/06/19/STM32MPU%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-Starter-Package/cubeprog.png" class="" title="连接设备">

<ul>
<li>选择tsv文件</li>
</ul>
<p><code>$HOME/STM32MPU_workspace/STM32MP15-Ecosystem-v1.2.0/Starter-Package/stm32mp1-openstlinux-20-02-19/images/stm32mp1/flashlayout_st-image-weston/FlashLayout_sdcard_stm32mp157a-dk1-trusted.tsv</code></p>
<ul>
<li>选择镜像的位置</li>
</ul>
<p><code>$HOME/STM32MPU_workspace/STM32MP15-Ecosystem-v1.2.0/Starter-Package/stm32mp1-openstlinux-20-02-19/images/stm32mp1</code></p>
<img src="/2020/06/19/STM32MPU%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-Starter-Package/cubeprog1.png" class="" title="下载">


<h2 id="10-完成后将拨码开关拨到ON"><a href="#10-完成后将拨码开关拨到ON" class="headerlink" title="10. 完成后将拨码开关拨到ON"></a>10. 完成后将拨码开关拨到ON</h2>

<p>重启开发版</p>
<h2 id="11-安装串口终端程序"><a href="#11-安装串口终端程序" class="headerlink" title="11.安装串口终端程序"></a>11.安装串口终端程序</h2><p>推荐picocom,好用。</p>
<p><code>sudo apt install picocom</code></p>
<h2 id="12-打开串口终端"><a href="#12-打开串口终端" class="headerlink" title="12. 打开串口终端"></a>12. 打开串口终端</h2><p><code>picocom -b 115200 /dev/ttyACM0</code></p>
<p>现在你可以通过串口终端操作你的MPU开发板了</p>
<h2 id="13-使用HDMI连接显示器，桌面效果如下"><a href="#13-使用HDMI连接显示器，桌面效果如下" class="headerlink" title="13.使用HDMI连接显示器，桌面效果如下"></a>13.使用HDMI连接显示器，桌面效果如下</h2><img src="/2020/06/19/STM32MPU%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-Starter-Package/desktop.png" class="" title="桌面">

<p>插上鼠标键盘就可以操作ST提供的示例程序了。</p>
<h2 id="NOTE"><a href="#NOTE" class="headerlink" title="NOTE"></a>NOTE</h2><ol>
<li>拨码开关控制的启动模式</li>
</ol>
<img src="/2020/06/19/STM32MPU%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-Starter-Package/boot-mode.png" class="" title="启动模式">

<ol start="2">
<li>如果和我一样小白入门，建议按照wiki的顺序阅读，一开始不推荐跳读。</li>
</ol>
<p><em>参考文档： UM2534</em></p>
<p><em>WIKI地址：<a href="https://wiki.st.com/" target="_blank" rel="noopener">WIKI</a></em></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>STM32MPU学习笔记</tag>
        <tag>Linux</tag>
        <tag>Starter-Package</tag>
      </tags>
  </entry>
</search>
